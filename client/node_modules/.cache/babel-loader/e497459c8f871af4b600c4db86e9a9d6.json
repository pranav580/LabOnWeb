{"ast":null,"code":"import _toConsumableArray from\"D:/Code/LabOnWeb/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"D:/Code/LabOnWeb/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';import TableRowData from'./TableRowData';import im from\"./diodefrw.jpg\";import MyChart from'./Graph';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Perform=function Perform(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),value=_useState4[0],setValue=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),data2=_useState6[0],setData2=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),InVolt=_useState8[0],setInVolt=_useState8[1];// const [valve,setvalve] = useState();\nvar _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),plot=_useState10[0],setPlot=_useState10[1];// [0,0], [0.09,0] ,[0.19,0], [0.27,0], [0.39,0.01] ,[0.43,0.03] ,[0.50,0.17], [0.55,0.42], [0.60,1.23], [0.62,1.99],\n// [0.65,3.91], [0.65,3.91], [0.67,5.55], [0.69,8.72], [0.73,19.32]    \nfunction fetchData(){fetch(\"https://blynk.cloud/external/api/get?token=mFk3DDdKz8-iueKm_hc_00vcjy8tqGqZ&V7\").then(function(res){return res.json();}).then(function(json){// setData2((data2) => [data2,json]);\nsetData2(json);// console.log(data2, \"Output Current\");\n});fetch(\"https://blynk.cloud/external/api/get?token=mFk3DDdKz8-iueKm_hc_00vcjy8tqGqZ&V6\").then(function(res){return res.json();}).then(function(json){// setData((data) => [data,json]);\nsetData(function(data){return[].concat(_toConsumableArray(data),[json]);});console.log(data,\"Output Voltage\");});fetch(\"https://blynk.cloud/external/api/get?token=mFk3DDdKz8-iueKm_hc_00vcjy8tqGqZ&V5\").then(function(res){return res.json();}).then(function(json){setInVolt(json);// console.log(InVolt, \"Input Voltage\");\n});// setPlot((valve)=>[...valve,valve]);\n// var lol = [data,data2];\n// setvalve(lol);\n// console.log(valve, \"Valve\");\nsetPlot(function(plot){return[].concat(_toConsumableArray(plot),[[InVolt,data2]]);});console.log(plot,\"Hello\");}function UpdateData(){// console.log(value);\nfetch(\"https://blynk.cloud/external/api/update?token=mFk3DDdKz8-iueKm_hc_00vcjy8tqGqZ&V1=\".concat(value));}function Plot(){}return/*#__PURE__*/_jsxs(\"div\",{className:\"Perform\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"headPerform\",children:\"Forward Bias Silicon Diode\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"ctrlImg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"controls\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Controls\"}),/*#__PURE__*/_jsx(\"hr\",{className:\"ctrlHr\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"dcIn\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"DC volt : \",/*#__PURE__*/_jsx(\"span\",{children:value}),\"V\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",name:\"Voltage\",step:\"0.1\",min:\"0\",max:\"5\",onChange:function onChange(event){return setValue(event.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"btns\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"btnsbtn\",onClick:UpdateData,children:\"Send to hardware\"}),/*#__PURE__*/_jsx(\"div\",{className:\"btnsbtn\",onClick:fetchData,children:\"Add To Table\"}),/*#__PURE__*/_jsx(\"div\",{className:\"btnsbtn\",onClick:Plot,children:\"Plot\"}),/*#__PURE__*/_jsx(\"div\",{className:\"btnsbtn\",onClick:function onClick(){setPlot([]);setData([]);},children:\"Clear\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"imgPerform\",children:[/*#__PURE__*/_jsx(\"img\",{src:im,alt:\"img\"}),/*#__PURE__*/_jsx(\"div\",{className:\"circuitVolt\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tableChart\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"ExpTable scroll\",children:/*#__PURE__*/_jsx(\"table\",{children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Input Voltage\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Forward Voltage(Volt)\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Forward Current(mAmp)\"})]}),plot.map(function(da,num){return/*#__PURE__*/_jsx(TableRowData,{plot:plot,data:data[num],num:num},num);})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"ExpChart\",children:/*#__PURE__*/_jsx(MyChart,{plot:plot})})]})]});};export default Perform;","map":{"version":3,"sources":["D:/Code/LabOnWeb/client/src/Components/Perform.jsx"],"names":["useState","TableRowData","im","MyChart","Perform","data","setData","value","setValue","data2","setData2","InVolt","setInVolt","plot","setPlot","fetchData","fetch","then","res","json","console","log","UpdateData","Plot","event","target","map","da","num"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport TableRowData from './TableRowData';\r\nimport im from \"./diodefrw.jpg\"\r\nimport MyChart from './Graph';\r\n\r\nconst Perform = ()=>{\r\n\r\n    const [data, setData] = useState([]);\r\n    const [value, setValue] = useState();\r\n    const [data2, setData2] = useState();\r\n    const [InVolt, setInVolt] = useState();\r\n    // const [valve,setvalve] = useState();\r\n    const [plot,setPlot] = useState([]);\r\n    // [0,0], [0.09,0] ,[0.19,0], [0.27,0], [0.39,0.01] ,[0.43,0.03] ,[0.50,0.17], [0.55,0.42], [0.60,1.23], [0.62,1.99],\r\n        // [0.65,3.91], [0.65,3.91], [0.67,5.55], [0.69,8.72], [0.73,19.32]    \r\n\r\n    function fetchData(){\r\n        fetch(\"https://blynk.cloud/external/api/get?token=mFk3DDdKz8-iueKm_hc_00vcjy8tqGqZ&V7\")\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n            \r\n            // setData2((data2) => [data2,json]);\r\n            setData2(json);\r\n            // console.log(data2, \"Output Current\");\r\n        });\r\n\r\n        fetch(\"https://blynk.cloud/external/api/get?token=mFk3DDdKz8-iueKm_hc_00vcjy8tqGqZ&V6\")\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n            // setData((data) => [data,json]);\r\n            setData((data)=>[...data,json]);\r\n            console.log(data, \"Output Voltage\");  \r\n        });\r\n        fetch(\"https://blynk.cloud/external/api/get?token=mFk3DDdKz8-iueKm_hc_00vcjy8tqGqZ&V5\")\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n            setInVolt(json);\r\n            // console.log(InVolt, \"Input Voltage\");\r\n        });\r\n        // setPlot((valve)=>[...valve,valve]);\r\n        // var lol = [data,data2];\r\n        // setvalve(lol);\r\n        // console.log(valve, \"Valve\");\r\n        setPlot((plot)=> [...plot,[InVolt,data2]]);\r\n        console.log(plot, \"Hello\");\r\n        \r\n    }\r\n\r\n    function UpdateData(){\r\n        // console.log(value);\r\n        fetch(`https://blynk.cloud/external/api/update?token=mFk3DDdKz8-iueKm_hc_00vcjy8tqGqZ&V1=${value}`)\r\n    }\r\n    function Plot(){\r\n        \r\n    }\r\n    return(\r\n        <div className='Perform'>\r\n          <div className=\"headPerform\">Forward Bias Silicon Diode</div>\r\n          <div className=\"ctrlImg\">\r\n            <div className=\"controls\">\r\n                <h1>Controls</h1>\r\n                <hr  className='ctrlHr'/>\r\n                <div className=\"dcIn\">\r\n                    <h4>DC volt : <span>{value}</span>V</h4>\r\n                    <input type=\"range\" name=\"Voltage\" step=\"0.1\" min=\"0\" max=\"5\" onChange={event => setValue(event.target.value)}/>\r\n                </div>\r\n                <div className=\"btns\">\r\n                    <div className=\"btnsbtn\" onClick={UpdateData}>Send to hardware</div>\r\n                    <div className=\"btnsbtn\" onClick={fetchData}>Add To Table</div>\r\n                    <div className=\"btnsbtn\" onClick={Plot}>Plot</div>\r\n                    <div className=\"btnsbtn\" onClick={()=>{setPlot([]); setData([])}}>Clear</div>\r\n                </div>\r\n            </div>\r\n            <div className='imgPerform'>\r\n                <img src={im} alt=\"img\" />\r\n                <div className=\"circuitVolt\">\r\n                    \r\n                </div>    \r\n            </div>\r\n          </div>\r\n          <div className=\"tableChart\">\r\n              <div className=\"ExpTable scroll\">\r\n                  <table>\r\n                      <tbody>\r\n                      <tr>\r\n                          <th>Input Voltage</th>\r\n                          <th>Forward Voltage(Volt)</th>\r\n                          <th>Forward Current(mAmp)</th>\r\n                      </tr>\r\n                      {\r\n                          plot.map((da,num)=>(\r\n                              <TableRowData  plot={plot} data={data[num]} num={num} key={num}/>\r\n                              ))\r\n                            }\r\n                      </tbody>\r\n                  </table>\r\n              </div>\r\n              <div className=\"ExpChart\">\r\n                    <MyChart plot={plot}/>\r\n              </div>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Perform;\r\n"]},"metadata":{},"sourceType":"module"}