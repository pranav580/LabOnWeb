{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\LabOnWeb\\\\client\\\\src\\\\Components\\\\Perform.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport TableRowData from './TableRowData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Perform = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [value, setValue] = useState();\n\n  function fetchData() {\n    fetch(\"https://blynk.cloud/external/api/get?token=UOkSf2Xaz1XFZbelzqZklo5E5lkJq-Ae&D1\").then(res => res.json()).then(json => {\n      console.log(json);\n      setData(data => [...data, json]);\n    });\n  }\n\n  function UpdateData() {\n    console.log(value);\n    fetch(`https://blynk.cloud/external/api/update?token=UOkSf2Xaz1XFZbelzqZklo5E5lkJq-Ae&V0=${value}`);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Perform\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headPerform\",\n      children: \"Forward Bias Silicon Diode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Controls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"ctrlHr\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dcIn\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"DC volt : \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 31\n          }, this), \"V\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          name: \"Voltage\",\n          step: \"0.1\",\n          min: \"0\",\n          max: \"5\",\n          onChange: event => setValue(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btnsbtn\",\n          onClick: UpdateData,\n          children: \"Send to hardware\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btnsbtn\",\n          onClick: fetchData,\n          children: \"Add To Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btnsbtn\",\n          children: \"Plot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btnsbtn\",\n          onClick: () => setData([]),\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"diodefrw.jpg\",\n      alt: \"img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ExpTable\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Forward Voltage(Volt)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Forward Current(mAmp)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 23\n          }, this), data.map((data, num) => /*#__PURE__*/_jsxDEV(TableRowData, {\n            data: data\n          }, num, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Perform, \"ywXrr1B0vplvPVyCxAlG+d9kUuk=\");\n\n_c = Perform;\nexport default Perform;\n\nvar _c;\n\n$RefreshReg$(_c, \"Perform\");","map":{"version":3,"sources":["D:/Code/LabOnWeb/client/src/Components/Perform.jsx"],"names":["useState","TableRowData","Perform","data","setData","value","setValue","fetchData","fetch","then","res","json","console","log","UpdateData","event","target","map","num"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport TableRowData from './TableRowData';\r\n\r\nconst Perform = ()=>{\r\n\r\n    const [data, setData] = useState([]);\r\n    const [value, setValue] = useState();\r\n\r\n    function fetchData(){\r\n\r\n        fetch(\"https://blynk.cloud/external/api/get?token=UOkSf2Xaz1XFZbelzqZklo5E5lkJq-Ae&D1\")\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n            console.log(json);\r\n            setData((data) => [...data,json]);\r\n        });\r\n    }\r\n\r\n    function UpdateData(){\r\n        console.log(value);\r\n        fetch(`https://blynk.cloud/external/api/update?token=UOkSf2Xaz1XFZbelzqZklo5E5lkJq-Ae&V0=${value}`)\r\n    }\r\n    return(\r\n        <div className='Perform'>\r\n          <div className=\"headPerform\">Forward Bias Silicon Diode</div>\r\n          <div className=\"controls\">\r\n              <h1>Controls</h1>\r\n              <hr  className='ctrlHr'/>\r\n              <div className=\"dcIn\">\r\n                <h4>DC volt : <span>{value}</span>V</h4>\r\n                <input type=\"range\" name=\"Voltage\" step=\"0.1\" min=\"0\" max=\"5\" onChange={event => setValue(event.target.value)}/>\r\n              </div>\r\n              <div className=\"btns\">\r\n                  <div className=\"btnsbtn\" onClick={UpdateData}>Send to hardware</div>\r\n                  <div className=\"btnsbtn\" onClick={fetchData}>Add To Table</div>\r\n                  <div className=\"btnsbtn\">Plot</div>\r\n                  <div className=\"btnsbtn\" onClick={()=>setData([])}>Clear</div>\r\n              </div>\r\n          </div>\r\n          <img src=\"diodefrw.jpg\" alt=\"img\" />\r\n              <div className=\"ExpTable\">\r\n                  <table>\r\n                      <tbody>\r\n                      <tr>\r\n                          <th>Forward Voltage(Volt)</th>\r\n                          <th>Forward Current(mAmp)</th>\r\n                      </tr>\r\n                      {\r\n                        data.map((data,num)=>(\r\n                            <TableRowData data={data} key={num}/>\r\n                        ))\r\n                      }\r\n                      </tbody>\r\n                  </table>\r\n              </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Perform;\r\n"]},"metadata":{},"sourceType":"module"}