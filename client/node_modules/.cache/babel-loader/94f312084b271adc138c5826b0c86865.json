{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\LabOnWeb\\\\client\\\\src\\\\Components\\\\Perform.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport TableRowData from './TableRowData';\nimport im from \"./diodefrw.jpg\";\nimport MyChart from './Graph';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Perform = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [value, setValue] = useState();\n  const [data2, setData2] = useState([]);\n  const [InVolt, setInVolt] = useState([]);\n  const [valve, setvalve] = useState();\n  const [plot, setPlot] = useState([]);\n\n  function fetchData() {\n    fetch(\"https://blynk.cloud/external/api/get?token=mFk3DDdKz8-iueKm_hc_00vcjy8tqGqZ&V7\").then(res => res.json()).then(json => {\n      setData2(data2 => [data2, json]); // setData2(data2);\n      // console.log(data2, \"Output Current\");\n    });\n    fetch(\"https://blynk.cloud/external/api/get?token=mFk3DDdKz8-iueKm_hc_00vcjy8tqGqZ&V6\").then(res => res.json()).then(json => {\n      setData(data => [data, json]); // setData(data);\n      // console.log(data, \"Output Voltage\");  \n    });\n    fetch(\"https://blynk.cloud/external/api/get?token=mFk3DDdKz8-iueKm_hc_00vcjy8tqGqZ&V5\").then(res => res.json()).then(json => {\n      setInVolt(InVolt => [...InVolt, json]); // console.log(InVolt, \"Input Voltage\");\n    }); // setPlot((valve)=>[...valve,valve]);\n\n    var lol = [data, data2];\n    setvalve(lol);\n    console.log(valve, \"Valve\");\n    setPlot(plot => [...plot, valve]);\n    console.log(plot, \"Hello\");\n  }\n\n  function UpdateData() {\n    console.log(value);\n    fetch(`https://blynk.cloud/external/api/update?token=mFk3DDdKz8-iueKm_hc_00vcjy8tqGqZ&V1=${value}`);\n  }\n\n  function Plot() {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Perform\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headPerform\",\n      children: \"Forward Bias Silicon Diode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ctrlImg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Controls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"ctrlHr\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dcIn\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"DC volt : \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 35\n            }, this), \"V\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            name: \"Voltage\",\n            step: \"0.1\",\n            min: \"0\",\n            max: \"5\",\n            onChange: event => setValue(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btnsbtn\",\n            onClick: UpdateData,\n            children: \"Send to hardware\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btnsbtn\",\n            onClick: fetchData,\n            children: \"Add To Table\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btnsbtn\",\n            onClick: Plot,\n            children: \"Plot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btnsbtn\",\n            onClick: () => {\n              setData([]);\n              setData2([]);\n            },\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"imgPerform\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: im,\n          alt: \"img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"circuitVolt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tableChart\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ExpTable\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Input Voltage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Forward Voltage(Volt)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Forward Current(mAmp)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 23\n            }, this), data.map((data, num) => /*#__PURE__*/_jsxDEV(TableRowData, {\n              data2: data2[num],\n              data: data,\n              InVolt: InVolt[num]\n            }, num, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 31\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ExpChart\",\n        children: /*#__PURE__*/_jsxDEV(MyChart, {\n          plot: plot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Perform, \"2ZcSxLlGxf7bauOPAMa0FV/c02Y=\");\n\n_c = Perform;\nexport default Perform;\n\nvar _c;\n\n$RefreshReg$(_c, \"Perform\");","map":{"version":3,"sources":["D:/Code/LabOnWeb/client/src/Components/Perform.jsx"],"names":["useState","TableRowData","im","MyChart","Perform","data","setData","value","setValue","data2","setData2","InVolt","setInVolt","valve","setvalve","plot","setPlot","fetchData","fetch","then","res","json","lol","console","log","UpdateData","Plot","event","target","map","num"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport TableRowData from './TableRowData';\r\nimport im from \"./diodefrw.jpg\"\r\nimport MyChart from './Graph';\r\n\r\nconst Perform = ()=>{\r\n\r\n    const [data, setData] = useState([]);\r\n    const [value, setValue] = useState();\r\n    const [data2, setData2] = useState([]);\r\n    const [InVolt, setInVolt] = useState([]);\r\n    const [valve,setvalve] = useState();\r\n    const [plot,setPlot] = useState([]);\r\n\r\n    function fetchData(){\r\n        fetch(\"https://blynk.cloud/external/api/get?token=mFk3DDdKz8-iueKm_hc_00vcjy8tqGqZ&V7\")\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n            \r\n            setData2((data2) => [data2,json]);\r\n            // setData2(data2);\r\n            // console.log(data2, \"Output Current\");\r\n        });\r\n\r\n        fetch(\"https://blynk.cloud/external/api/get?token=mFk3DDdKz8-iueKm_hc_00vcjy8tqGqZ&V6\")\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n            setData((data) => [data,json]);\r\n            // setData(data);\r\n            // console.log(data, \"Output Voltage\");  \r\n        });\r\n        fetch(\"https://blynk.cloud/external/api/get?token=mFk3DDdKz8-iueKm_hc_00vcjy8tqGqZ&V5\")\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n            setInVolt((InVolt) => [...InVolt,json]);\r\n            // console.log(InVolt, \"Input Voltage\");\r\n        });\r\n        // setPlot((valve)=>[...valve,valve]);\r\n        var lol = [data,data2];\r\n        setvalve(lol);\r\n        console.log(valve, \"Valve\");\r\n        setPlot((plot)=> [...plot,valve]);\r\n        console.log(plot, \"Hello\");\r\n        \r\n    }\r\n\r\n    function UpdateData(){\r\n        console.log(value);\r\n        fetch(`https://blynk.cloud/external/api/update?token=mFk3DDdKz8-iueKm_hc_00vcjy8tqGqZ&V1=${value}`)\r\n    }\r\n    function Plot(){\r\n        \r\n    }\r\n    return(\r\n        <div className='Perform'>\r\n          <div className=\"headPerform\">Forward Bias Silicon Diode</div>\r\n          <div className=\"ctrlImg\">\r\n            <div className=\"controls\">\r\n                <h1>Controls</h1>\r\n                <hr  className='ctrlHr'/>\r\n                <div className=\"dcIn\">\r\n                    <h4>DC volt : <span>{value}</span>V</h4>\r\n                    <input type=\"range\" name=\"Voltage\" step=\"0.1\" min=\"0\" max=\"5\" onChange={event => setValue(event.target.value)}/>\r\n                </div>\r\n                <div className=\"btns\">\r\n                    <div className=\"btnsbtn\" onClick={UpdateData}>Send to hardware</div>\r\n                    <div className=\"btnsbtn\" onClick={fetchData}>Add To Table</div>\r\n                    <div className=\"btnsbtn\" onClick={Plot}>Plot</div>\r\n                    <div className=\"btnsbtn\" onClick={()=>{setData([]); setData2([])}}>Clear</div>\r\n                </div>\r\n            </div>\r\n            <div className='imgPerform'>\r\n                <img src={im} alt=\"img\" />\r\n                <div className=\"circuitVolt\">\r\n                    \r\n                </div>    \r\n            </div>\r\n          </div>\r\n          <div className=\"tableChart\">\r\n              <div className=\"ExpTable\">\r\n                  <table>\r\n                      <tbody>\r\n                      <tr>\r\n                          <th>Input Voltage</th>\r\n                          <th>Forward Voltage(Volt)</th>\r\n                          <th>Forward Current(mAmp)</th>\r\n                      </tr>\r\n                      {\r\n                          data.map((data,num)=>(\r\n                              <TableRowData  data2={data2[num]} data={data} InVolt={InVolt[num]} key={num}/>\r\n                              ))\r\n                            }\r\n                      </tbody>\r\n                  </table>\r\n              </div>\r\n              <div className=\"ExpChart\">\r\n                    <MyChart plot={plot}/>\r\n              </div>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Perform;\r\n"]},"metadata":{},"sourceType":"module"}