{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\LabOnWeb\\\\client\\\\src\\\\Components\\\\Graph.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Chart } from 'react-charts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyChart(_ref) {\n  _s();\n\n  let {\n    plot\n  } = _ref;\n  const data = React.useMemo(() => [{\n    label: 'Series 1',\n    data: [[0, 0], [0.09, 0], [0.19, 0], [0.27, 0], [0.39, 0.01], [0.43, 0.03], [0.50, 0.17], [0.55, 0.42], [0.60, 1.23], [0.62, 1.99], [0.65, 3.91], [0.65, 3.91], [0.67, 5.55], [0.69, 8.72], [0.73, 19.32]]\n  }], [plot]);\n  const axes = React.useMemo(() => [{\n    primary: true,\n    type: 'linear',\n    position: 'bottom'\n  }, {\n    type: 'linear',\n    position: 'left'\n  }], []);\n  return (\n    /*#__PURE__*/\n    // A react-chart hyper-responsively and continuously fills the available\n    // space of its parent element automatically\n    _jsxDEV(\"div\", {\n      style: {\n        width: '400px',\n        height: '300px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        data: data,\n        axes: axes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(MyChart, \"puzTL2H0AcW6w6spuXzYNVE0SuU=\");\n\n_c = MyChart;\nexport default MyChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyChart\");","map":{"version":3,"sources":["D:/Code/LabOnWeb/client/src/Components/Graph.jsx"],"names":["React","Chart","MyChart","plot","data","useMemo","label","axes","primary","type","position","width","height"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;;;AAEA,SAASC,OAAT,OAAyB;AAAA;;AAAA,MAAR;AAACC,IAAAA;AAAD,GAAQ;AACvB,QAAMC,IAAI,GAAGJ,KAAK,CAACK,OAAN,CACX,MAAM,CACJ;AACEC,IAAAA,KAAK,EAAE,UADT;AAEEF,IAAAA,IAAI,EAAE,CAAC,CAAC,CAAD,EAAG,CAAH,CAAD,EAAQ,CAAC,IAAD,EAAM,CAAN,CAAR,EAAkB,CAAC,IAAD,EAAM,CAAN,CAAlB,EAA4B,CAAC,IAAD,EAAM,CAAN,CAA5B,EAAsC,CAAC,IAAD,EAAM,IAAN,CAAtC,EAAmD,CAAC,IAAD,EAAM,IAAN,CAAnD,EAAgE,CAAC,IAAD,EAAM,IAAN,CAAhE,EAA6E,CAAC,IAAD,EAAM,IAAN,CAA7E,EAA0F,CAAC,IAAD,EAAM,IAAN,CAA1F,EAAuG,CAAC,IAAD,EAAM,IAAN,CAAvG,EACR,CAAC,IAAD,EAAM,IAAN,CADQ,EACK,CAAC,IAAD,EAAM,IAAN,CADL,EACkB,CAAC,IAAD,EAAM,IAAN,CADlB,EAC+B,CAAC,IAAD,EAAM,IAAN,CAD/B,EAC4C,CAAC,IAAD,EAAM,KAAN,CAD5C;AAFR,GADI,CADK,EAQX,CAACD,IAAD,CARW,CAAb;AAWA,QAAMI,IAAI,GAAGP,KAAK,CAACK,OAAN,CACX,MAAM,CACJ;AAAEG,IAAAA,OAAO,EAAE,IAAX;AAAiBC,IAAAA,IAAI,EAAE,QAAvB;AAAiCC,IAAAA,QAAQ,EAAE;AAA3C,GADI,EAEJ;AAAED,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,QAAQ,EAAE;AAA5B,GAFI,CADK,EAKX,EALW,CAAb;AAQA;AAAA;AACE;AACA;AACA;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,OADF;AAELC,QAAAA,MAAM,EAAE;AAFH,OADT;AAAA,6BAME,QAAC,KAAD;AAAO,QAAA,IAAI,EAAER,IAAb;AAAmB,QAAA,IAAI,EAAEG;AAAzB;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AAHF;AAYD;;GAhCQL,O;;KAAAA,O;AAkCT,eAAeA,OAAf","sourcesContent":["import React from 'react'\r\nimport { Chart } from 'react-charts'\r\n \r\nfunction MyChart({plot}) {\r\n  const data = React.useMemo(\r\n    () => [\r\n      {\r\n        label: 'Series 1',\r\n        data: [[0,0], [0.09,0] ,[0.19,0], [0.27,0], [0.39,0.01] ,[0.43,0.03] ,[0.50,0.17], [0.55,0.42], [0.60,1.23], [0.62,1.99],\r\n      [0.65,3.91], [0.65,3.91], [0.67,5.55], [0.69,8.72], [0.73,19.32]     ] \r\n      },\r\n    ],\r\n    [plot]\r\n  )\r\n \r\n  const axes = React.useMemo(\r\n    () => [\r\n      { primary: true, type: 'linear', position: 'bottom' },\r\n      { type: 'linear', position: 'left' }\r\n    ],\r\n    []\r\n  )\r\n \r\n  return(\r\n    // A react-chart hyper-responsively and continuously fills the available\r\n    // space of its parent element automatically\r\n    <div\r\n      style={{\r\n        width: '400px',\r\n        height: '300px'\r\n      }}\r\n    >\r\n      <Chart data={data} axes={axes} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyChart;"]},"metadata":{},"sourceType":"module"}